PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX mydata: <http://example.com/resource/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX pmbb: <http://www.itmat.upenn.edu/biobank/>
Prefix obo: <http://purl.obolibrary.org/obo/>
prefix graphBuilder: <http://graphBuilder.org/>
insert
{
    graph pmbb:cached_mondo_icd_mappings
    {
        ?mapItem a graphBuilder:cachedMapping .
        ?mapItem graphBuilder:hasMondoTerm ?mondoSub .
        ?mapItem graphBuilder:hasIcdTerm ?icdLeaf .
        ?mapItem graphBuilder:mondoLabel ?ml .
        ?mapItem graphBuilder:pathFamily ?pathFamily .
        ?mapItem graphBuilder:assertionOrientation ?assertionOrientation .
        ?mapItem graphBuilder:assertedPredicate ?assertedPredicate .
        ?mapItem graphBuilder:icdVersion ?icdVer .
        ?mapItem graphBuilder:icdAsString ?icdCode .
        ?mapItem graphBuilder:icdLabel ?icdLabel .
        ?mapItem graphBuilder:isRare ?rareBool .
        ?mapItem graphBuilder:isSyndromic ?syndromicBool .
        ?mapItem graphBuilder:isCongenital ?congenitalBool .
    }
}
#select distinct
#?mondo ?mondoSub ?rareBool ?syndromicBool ?congenitalBool ?ml ?pathFamily ?assertionOrientation ?assertedPredicate ?icdLeaf ?icdVer ?icdCode ?icdLabel
where {
    #values ?mondo {obo:MONDO_0008903}
    bind (uri(CONCAT("http://graphBuilder.org/",sha256(concat(str(?mondoSub),str(?pathFamily),str(?assertionOrientation),str(?assertedPredicate),str(?icdLeaf))))) as ?mapItem)
    graph <http://purl.obolibrary.org/obo/mondo.owl> {
        ?mondoSub rdfs:label ?ml ;
           <http://www.geneontology.org/formats/oboInOwl#id> ?mid
    }
    graph <http://example.com/resource/MondoTransitiveSubClasses> {
        ?mondoSub rdfs:subClassOf ?mondo .
    }
    Optional
        {
            graph <http://example.com/resource/MondoTransitiveSimpleScoEqcAxioms>
            {
                ?mondoSub obo:RO_0002573 obo:MONDO_0021136 .
                Bind (true as ?rare)   
            }
        }
        Optional
        {
            graph <http://example.com/resource/MondoTransitiveSimpleScoEqcAxioms>
            {
                ?mondoSub obo:RO_0002573 obo:MONDO_0021140 .
                Bind (true as ?congenital)   
            }
        }
        Optional
        {
            graph <http://example.com/resource/MondoTransitiveSimpleScoEqcAxioms>
            {
                ?mondoSub obo:RO_0002573 obo:MONDO_0021127 .
                Bind (true as ?syndromic)   
            }
        }
    {
        bind("mondo->icd" as ?pathFamily)
        {
            {
                graph <http://example.com/resource/ICD10TransitiveSubClasses> {
                    ?icdLeaf rdfs:subClassOf ?icd
                }
                graph <http://purl.bioontology.org/ontology/ICD10CM/> {
                    ?icdLeaf skos:notation ?icdCode .
                    ?icdLeaf skos:prefLabel ?icdLabel .
                }
                bind("ICD10CM" as ?icdVer)
            }
            union
            {
                graph <http://example.com/resource/ICD9DiseaseInjuryTransitiveSubClasses> {
                    ?icdLeaf rdfs:subClassOf ?icd
                }
                graph <http://purl.bioontology.org/ontology/ICD9CM/> {
                    ?icdLeaf skos:notation ?icdCode .
                    ?icdLeaf skos:prefLabel ?icdLabel .
                }
                bind("ICD9CM" as ?icdVer)
            }
        }
        {
            {
                graph <http://example.com/resource/rewrites_MonDO_subject> {
                    ?mondoSub ?assertedPredicate ?icd .
                }
                bind("forward" as ?assertionOrientation)
            }
            union
            {
                graph <http://example.com/resource/rewrites_MonDO_object> {
                    ?mondoSub ?assertedPredicate ?icd .
                }
                bind("reverse" as ?assertionOrientation)
            }
        }
    }
    UNION
    {
        bind("mondo->CUI->icd" as ?pathFamily)
        {
            {
                graph <http://example.com/resource/ICD10TransitiveSubClasses> {
                    ?icdLeaf rdfs:subClassOf ?icd
                }
                graph <http://purl.bioontology.org/ontology/ICD10CM/> {
                    ?icdLeaf skos:notation ?icdCode .
                    ?icdLeaf skos:prefLabel ?icdLabel .
                }
                bind("ICD10CM" as ?icdVer)
            }
            union
            {
                graph <http://example.com/resource/ICD9DiseaseInjuryTransitiveSubClasses> {
                    ?icdLeaf rdfs:subClassOf ?icd
                }
                graph <http://purl.bioontology.org/ontology/ICD9CM/> {
                    ?icdLeaf skos:notation ?icdCode .
                    ?icdLeaf skos:prefLabel ?icdLabel .
                }
                bind("ICD9CM" as ?icdVer)
            }
        }
            graph <http://example.com/resource/materializedCui> {
            ?cui a mydata:materializedCui .
            ?icd mydata:materializedCui ?cui .
        }
        {
            {
                graph <http://example.com/resource/rewrites_MonDO_subject> {
                    ?mondoSub ?assertedPredicate ?cui .
                }
                bind("forward" as ?assertionOrientation)
            }
            union
            {
                graph <http://example.com/resource/rewrites_MonDO_object> {
                    ?mondoSub ?assertedPredicate ?cui .
                }
                bind("reverse" as ?assertionOrientation)
            }
        }
    }
    UNION
    {
        bind("mondo->snomed->CUI->icd" as ?pathFamily)
        {
            {
                graph <http://example.com/resource/ICD10TransitiveSubClasses> {
                    ?icdLeaf rdfs:subClassOf ?icd
                }
                graph <http://purl.bioontology.org/ontology/ICD10CM/> {
                    ?icdLeaf skos:notation ?icdCode .
                    ?icdLeaf skos:prefLabel ?icdLabel .
                }
                bind("ICD10CM" as ?icdVer)
            }
            union
            {
                graph <http://example.com/resource/ICD9DiseaseInjuryTransitiveSubClasses> {
                    ?icdLeaf rdfs:subClassOf ?icd
                }
                graph <http://purl.bioontology.org/ontology/ICD9CM/> {
                    ?icdLeaf skos:notation ?icdCode .
                    ?icdLeaf skos:prefLabel ?icdLabel .
                }
                bind("ICD9CM" as ?icdVer)
            }
        }
        graph <http://example.com/resource/materializedCui> {
            ?icd mydata:materializedCui ?cui .
            ?snomed mydata:materializedCui ?cui .
        }
        graph <http://example.com/resource/SnomedDiseaseTransitiveSubClasses> {
            ?snomed rdfs:subClassOf ?sParent .
        }
        {
            {
                graph <http://example.com/resource/rewrites_MonDO_subject> {
                    ?mondoSub ?assertedPredicate ?sParent .
                }
                bind("forward" as ?assertionOrientation)
            }
            union
            {
                graph <http://example.com/resource/rewrites_MonDO_object> {
                    ?mondoSub ?assertedPredicate ?sParent .
                }
                bind("reverse" as ?assertionOrientation)
            }
        }
    }
    UNION
    {
        bind("mondo->snomed,transitive->NLM mappings->icd9" as ?pathFamily)
        {
            graph <http://example.com/resource/ICD9DiseaseInjuryTransitiveSubClasses> {
                ?icdLeaf rdfs:subClassOf ?icd
            }
            graph <http://purl.bioontology.org/ontology/ICD9CM/> {
                ?icdLeaf skos:notation ?icdCode .
                ?icdLeaf skos:prefLabel ?icdLabel .
            }
            bind("ICD9CM" as ?icdVer)
        }
        graph <https://www.nlm.nih.gov/research/umls/mapping_projects/icd9cm_to_snomedct.html> {
            ?icd <https://www.nlm.nih.gov/research/umls/mapping_projects/icd9cm_to_snomedct.html> ?snomed
        }
        graph <http://example.com/resource/SnomedDiseaseTransitiveSubClasses> {
            ?snomed rdfs:subClassOf ?sParent .
        }
        {
            {
                graph <http://example.com/resource/rewrites_MonDO_subject> {
                    ?mondoSub ?assertedPredicate ?sParent .
                }
                bind("forward" as ?assertionOrientation)
            }
            union
            {
                graph <http://example.com/resource/rewrites_MonDO_object> {
                    ?mondoSub ?assertedPredicate ?sParent .
                }
                bind("reverse" as ?assertionOrientation)
            }
        }
    }
    bind (if (bound(?rare), ?rare, false) as ?rareBool)
    bind (if (bound(?congenital), ?rare, false) as ?congenitalBool)
    bind (if (bound(?syndromic), ?rare, false) as ?syndromicBool)
}